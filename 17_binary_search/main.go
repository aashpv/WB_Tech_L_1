package main

import "fmt"

/*
Реализовать бинарный поиск встроенными методами языка.
*/

// Функция binarySearch выполняет бинарный поиск в отсортированном массиве arr
// для нахождения позиции элемента, равного target. Если элемент найден, возвращается его индекс,
// в противном случае возвращается -1.
func binarySearch(arr []int, target int) int {
	// Инициализация указателей: l (левая граница) и r (правая граница)
	l, r := 0, len(arr)-1

	// Цикл выполняется, пока левая граница меньше или равна правой.
	for l <= r {
		// Вычисление среднего индекса mid
		mid := l + (r-l)/2

		// Если элемент в средней позиции равен target, возвращаем его индекс.
		if arr[mid] == target {
			return mid
		}

		// Если элемент в средней позиции больше target, продолжаем поиск в левой половине массива.
		if arr[mid] > target {
			r = mid - 1
		} else {
			// Если элемент в средней позиции меньше target, продолжаем поиск в правой половине массива.
			l = mid + 1
		}
	}

	// Если элемент не найден
	return -1
}

func main() {
	// Входной массив arr должен быть отсортирован.
	arr := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}

	fmt.Println(binarySearch(arr, 2)) // Ожидаемый вывод: 1
	fmt.Println(binarySearch(arr, 9)) // Ожидаемый вывод: 8
	fmt.Println(binarySearch(arr, 0)) // Ожидаемый вывод: -1
}
