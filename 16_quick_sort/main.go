package main

import (
	"fmt"
)

/*
Реализовать быструю сортировку массива (quicksort) встроенными методами языка.
*/

func quickSort(arr []int) []int {
	// Если массив содержит меньше двух элементов, он уже отсортирован.
	if len(arr) < 2 {
		return arr
	}

	// Инициализация указателей для начала (left) и конца (right) массива.
	left, right := 0, len(arr)-1

	// Выбор опорного элемента (pivot). В данном случае это последний элемент массива.
	pivot := arr[right]

	// Перемещаем элементы меньше опорного влево, больше - вправо.
	for i := range arr {
		// Если текущий элемент меньше опорного, меняем его местами с элементом в позиции "left".
		if arr[i] < pivot {
			arr[left], arr[i] = arr[i], arr[left]
			left++ // Сдвигаем левый указатель вправо
		}
	}

	// Меняем местами опорный элемент и элемент в позиции "left", таким образом опорный элемент оказывается на своём месте.
	arr[left], arr[right] = arr[right], arr[left]

	// Рекурсивно применяем быструю сортировку к подмассивам слева и справа от опорного элемента.
	quickSort(arr[:left])   // Сортируем элементы слева от опорного
	quickSort(arr[left+1:]) // Сортируем элементы справа от опорного

	// Возвращаем отсортированный массив.
	return arr
}

func main() {
	arr := []int{4, 1, 2, 5, 3}
	fmt.Println(arr)
	fmt.Println(quickSort(arr))
}
